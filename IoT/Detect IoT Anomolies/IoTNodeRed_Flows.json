[{"id":"41621357.5ee7ac","type":"tab","label":"Simulator To IoT","disabled":false,"info":""},{"id":"3e737c1f.27e7d4","type":"tab","label":"DB2 Persist","disabled":false,"info":""},{"id":"dbd0cc7a.c6bc38","type":"inject","z":"41621357.5ee7ac","name":"Voltage Sensor Simulator","topic":"","payload":"{ \"d\": { \"voltage\": 240, \"frequency\": 50 } }","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":"","x":172,"y":43,"wires":[["b5d98f0d.8d0378"]]},{"id":"b5d98f0d.8d0378","type":"function","z":"41621357.5ee7ac","name":"Voltage data","func":"// initialise the counter to 0 if it doesn't exist already\nvar count = context.get('count')||0;\ncount += 1;\n// store the value back\ncontext.set('count',count);\n// make it part of the outgoing msg object\nmsg.payload.d.count = count;\nif(count % 100 <= 90) {\n msg.payload.d.voltage = Math.floor(Math.random() * (240 - 220) + 220);\n} else {\n msg.payload.d.voltage = Math.floor(Math.random() * (260 - 240) + 240);\n}\nmsg.payload.d.frequency = Math.floor(Math.random() * (80 - 60 + 1) + 60);\n//msg.payload = JSON.stringify(msg.payload)\nmsg.eventOrCommandType = \"voltage\"\nglobal.set('voltages',msg.payload.d.voltage);\nreturn msg;","outputs":1,"noerr":0,"x":162,"y":164,"wires":[["210e8831.c42db8"]]},{"id":"210e8831.c42db8","type":"function","z":"41621357.5ee7ac","name":"zscore","func":"//initialize a list that stores the last n values for the electric current by using the voltage parameter. In stream computing, this list is called a \"sliding window of fixed size.\" \nvar aggwindow = context.get('aggwindow')||[];\n\n//add values to that lis\naggwindow.push(msg.payload.d.voltage); \n\n//Continue adding values to the list until we have exceeded 30 values, which defines the size of our sliding window. \nif (aggwindow.length> 30) {\n \n //To compute z-score, we need the mean and the standard deviation.\n sum = aggwindow.reduce((a,b)=>a+b,0);\n n = aggwindow.length;\n mean = sum/n;\n sd = Math.sqrt(aggwindow.map(x=>Math.pow(mean-x,2)).reduce((a,b)=>a+b,0));\n \n // get rid of the oldest element in the list, which resembles a LIFO. \n aggwindow.shift();\n \n //Perform Z-Score Calculation. Add a small value to standard deviation because the standard deviation can become zero, which is mathematically undefined\n msg.zscore = (mean-msg.payload.d.voltage)/(sd+0.0001)\n}\n\n//store this list to a global context to preserve it over individual message lifetimes\ncontext.set('aggwindow',aggwindow);\n\n\n//output voltage and zscore\nmsg.payload = {\n [(\"voltage\")]:global.get(\"voltages\"),\n [(\"zscore\")]:Math.abs(msg.zscore)\n }\n\nreturn msg;","outputs":1,"noerr":0,"x":331,"y":164,"wires":[["e6bb0f83.8a3c","7666a48d.6fd014"]]},{"id":"e6bb0f83.8a3c","type":"function","z":"41621357.5ee7ac","name":"add timestamp","func":"msg.payload.time = new Date().getTime();\nreturn msg;","outputs":1,"noerr":0,"x":520,"y":180,"wires":[["6df99633.131bc8"]]},{"id":"6d29a8ab.366b4","type":"template","z":"41621357.5ee7ac","name":"Danger","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"ALERT SHUTDOWN! Z-SCORE: {{payload.zscore}}","output":"str","x":700,"y":40,"wires":[["cc195e78.f579f8"]]},{"id":"cc195e78.f579f8","type":"debug","z":"41621357.5ee7ac","name":"Debug","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":830,"y":100,"wires":[]},{"id":"7666a48d.6fd014","type":"switch","z":"41621357.5ee7ac","name":"Voltage Threshold","property":"payload.zscore","propertyType":"msg","rules":[{"t":"gt","v":"0.3","vt":"str"},{"t":"lte","v":"0.3","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":510,"y":60,"wires":[["6d29a8ab.366b4"],["cc195e78.f579f8"]]},{"id":"6df99633.131bc8","type":"ibmiot out","z":"41621357.5ee7ac","authentication":"quickstart","outputType":"","deviceId":"","deviceType":"","eventCommandType":"","format":"","data":"","qos":0,"name":"IBM IoT","service":"","x":760,"y":220,"wires":[]},{"id":"ac75b808.1515b8","type":"dashDB out","z":"3e737c1f.27e7d4","dashDB":"","service":"_ext_","table":"IOTLAB","name":"","x":720,"y":80,"wires":[]},{"id":"77324075.46fe48","type":"function","z":"3e737c1f.27e7d4","name":"Convert Format","func":"var mydata = { \n \"VOLTAGE\" : msg.payload.voltage,\n \"ZSCORE\" : msg.payload.zscore,\n \"TIME\" : msg.payload.time\n \n}\nmsg.payload = mydata;\nreturn msg;","outputs":1,"noerr":0,"x":450.5,"y":79,"wires":[["ac75b808.1515b8","c3dc6fc6.7153c"]]},{"id":"c3dc6fc6.7153c","type":"debug","z":"3e737c1f.27e7d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":690,"y":180,"wires":[]},{"id":"a7794a24.90cee","type":"ibmiot in","z":"3e737c1f.27e7d4","authentication":"boundService","apiKey":"","inputType":"evt","logicalInterface":"","ruleId":"","deviceId":"Sensor01","applicationId":"","deviceType":"VoltageSensor","eventType":"voltage","commandType":"","format":"json","name":"IBM IoT","service":"registered","allDevices":"","allApplications":"","allDeviceTypes":"","allLogicalInterfaces":"","allEvents":"","allCommands":"","allFormats":"","qos":0,"x":168,"y":140,"wires":[["77324075.46fe48","bedc12ad.4dc34"]]},{"id":"bedc12ad.4dc34","type":"debug","z":"3e737c1f.27e7d4","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":400,"y":257,"wires":[]}]